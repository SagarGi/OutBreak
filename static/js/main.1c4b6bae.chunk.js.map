{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","options","value","label","code","customStyles","container","provided","width","App","handleChange","selectedOption","setState","state","globalCases","globalDeaths","globalRecovered","countryName","cases","todayCases","deaths","todayDeaths","recovered","active","critical","url","axios","get","then","response","console","log","data","this","alert","post","country1","country","className","styles","onChange","theme","borderRadius","colors","primary25","primary","onClick","sendPost","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1c4b6bae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\nimport Select from 'react-select'\n\nconst options = [\n  { value: 'Nepal', label: 'Nepal', code: 'np' },\n  { value: 'India', label: 'India', code: 'in' },\n  { value: 'USA', label: 'USA', code: 'us' },\n  { value: 'Italy', label: 'Italy', code: 'it'},\n  { value: 'Spain', label: 'Spain', code: 'es'},\n  { value: 'Germany', label: 'Germany', code: 'de'},\n  { value: 'Iran', label: 'Iran', code: 'ir'},\n  { value: 'France', label: 'France', code: 'fr'},\n  { value: 'UK', label: 'UK' , code: 'gb'},\n  { value: 'Switzerland', label: 'Switzerland', code: 'ch'},\n  { value: 'Belgium', label: 'Belgium', code: 'be'},\n  { value: 'Netherlands', label: 'Netherlands', code: 'nl'},\n  { value: 'S. Korea', label: 'S. Korea', code: 'kr'},\n  { value: 'Austria', label: 'Austria', code: 'at'},\n  { value: 'Turkey', label: 'Turkey', code: 'tr'},\n  { value: 'Canada', label: 'Canada', code: 'ca'},\n  { value: 'Portugal', label: 'Portugal', code: 'pt'},\n  { value: 'Norway', label: 'Norway', code: 'no'},\n  { value: 'Israel', label: 'Israel', code: 'il'},\n  { value: 'Australia', label: 'Australia', code: 'au'},\n  { value: 'Sweden', label: 'Sweden', code: 'se'},\n  { value: 'Malaysia', label: 'Malaysia', code: 'my'},\n  { value: 'Ireland', label: 'Ireland', code: 'ie'},\n  { value: 'Denmark', label: 'Denmark', code: 'dk'},\n  { value: 'Chile', label: 'Chile', code: 'cl'},\n  { value: 'Poland', label: 'Poland', code: 'pl'},\n  { value: 'Japan', label: 'Japan', code: 'jp'},\n  { value: 'Russia', label: 'Russia', code: 'ru'},\n  { value: 'Pakistan', label: 'Pakistan', code: 'pk'},\n  { value: 'Philippines', label: 'Philippines', code: 'ph'},\n  { value: 'Thailand', label: 'Thailand', code: 'th'},\n  { value: 'Saudi Arabia', label: 'Saudi Arabia', code: 'sa'},\n  { value: 'Indonesia', label: 'Indonesia', code: 'id'},\n  { value: 'Finland', label: 'Finland', code: 'fi'},\n  { value: 'South Africa', label: 'South Africa', code: 'za'},\n  { value: 'Greece', label: 'Greece', code: 'gr'},\n  { value: 'Mexico', label: 'Mexico', code: 'mx'},\n  { value: 'Singapore', label: 'Singapore', code: 'sg'},\n  { value: 'Hong Kong', label: 'Hong Kong', code: 'hk'},\n  { value: 'Qatar', label: 'Qatar', code: 'qa'},\n  { value: 'UAE', label: 'UAE', code: 'ae'},\n  { value: 'New Zealand', label: 'New Zealand', code: 'nz'},\n  { value: 'Iraq', label: 'Iraq', code: 'iq'},\n  { value: 'Kuwait', label: 'Kuwait', code: 'kw'},\n  { value: 'Cyprus', label: 'Cyprus', code: 'cy'},\n  { value: 'Vietnam', label: 'Vietnam', code: 'vn'},\n  { value: 'Ghana', label: 'Ghana', code: 'gh'},\n  { value: 'Afghanistan', label: 'Afghanistan', code: 'af'},\n  { value: 'Kenya', label: 'Kenya', code: 'ke'},\n  { value: 'Bangladesh', label: 'Bangladesh', code: 'bd'},\n  { value: 'China', label: 'China', code: 'cn'},\n  { value: 'Bhutan', label: 'Bhutan', code: 'bt'},\n  {value : 'Maldives', label: 'Maldives', code: 'mv'},\n  {value : 'Ireland', label: 'Ireland', code: 'ie'},\n  {value : 'Brazil', label: 'Brazil', code: 'br'},\n  {value : 'Argentina', label: 'Argentina', code: 'ar'}\n];\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    width: 400\n    \n    \n  })\n};\n\n\n\nclass App extends Component\n{\n\nconstructor()\n{\n  super()\n  this.state = {\n    globalCases: '-',\n    globalDeaths: '-',\n    globalRecovered: '-',\n    selectedOption: '',\n    countryName: '-',\n    cases:'-',\n    todayCases: '-',\n    deaths: '-',\n    todayDeaths:'-',\n    recovered: '-',\n    active:'-',\n    critical: '-',\n    url: ''\n  }\n\n}\n\nhandleChange = selectedOption => {\n  this.setState(\n    { selectedOption },\n    () => this.state.selectedOption.value\n  )\n}\n\n//gets invoked when page is realoaded\ncomponentDidMount()\n{\n   axios.get('/covid-19/country/all')\n   .then(response => {\n     console.log('hello')\n     console.log(response.data.cases)\n     this.setState({\n      globalCases : response.data.cases,\n      globalDeaths : response.data.deaths,\n      globalRecovered : response.data.recovered\n    })\n   })\n   \n}\n\nsendPost()\n{\n  if(!this.state.selectedOption.value)\n  {\n    alert('Please select your country!!!')\n  }\n  axios.post('/covid-19',{\n    country1 : this.state.selectedOption.value\n  })\n  .then(response =>{\n    console.log(response.data)\n    this.setState({\n      countryName : response.data.country,\n      cases : response.data.cases,\n      todayCases : response.data.todayCases,\n      deaths : response.data.deaths,\n      todayDeaths : response.data.todayDeaths,\n      recovered : response.data.recovered,\n      active : response.data.active,\n      critical : response.data.critical,\n      url : `https://www.countryflags.io/${this.state.selectedOption.code}/flat/64.png`\n    })\n    \n  })\n}\n\n\n  render()\n  {\n    return(\n      <div className = \"main\">\n          <div className = \"container main-content\">\n            <div className = \"card wrapper\">\n              <h1><u>COVID-19 INFORMATION HUB</u></h1>\n              <h5>World Wide:</h5>\n              <div className = \"container\">\n\n                <div className = 'row mb-2'>\n                  <div className = 'col-xl-4 col-lg-4 col-md-12 col-sm-12 bg-dark text-white'><p><b><u>Total Cases:</u></b><br></br>{this.state.globalCases}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-12 col-sm-12 bg-danger text-white'><p><b><u>Total Deaths:</u></b><br></br>{this.state.globalDeaths}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-12 col-sm-12 bg-success text-white'><p><b><u>Total Recovered:</u></b><br></br>{this.state.globalRecovered}</p></div>\n\n                </div>\n\n              </div>\n\n              <h6 className = \"text-white mt-3 text-dark\">Please Select Any Country To Get Information:</h6>\n\n              <div className = \"container\">\n                <div className = \"row mb-3\">\n\n                    <div className = \"col-xl-6 col-lg-6 col-md-12 col-sm-12 mt-3 select\">\n                    <Select\n                    styles={customStyles}\n                    value={this.state.selectedOption}\n                    onChange={this.handleChange}\n                    options={options}\n                    theme={theme => ({\n                      ...theme,\n                      borderRadius: 5,\n                      colors: {\n                        ...theme.colors,\n                        primary25: 'hotpink',\n                        primary: 'blue',\n                      },\n                    })}\n                    />\n                    </div>\n                    <div className = \"col-xl-6 col-lg-6 col-md-12 col-sm-12 mt-3 button\">\n                      <button className = \"getinfo\" onClick = {() => this.sendPost()}>Get Information</button>\n                    </div>\n                    </div>\n                </div>\n\n                <h5 className = \"mt-4\">Country:<img className = \"ml-4\" src = {this.state.url}></img> </h5>\n\n                <div className = \"container\">\n                  <div className = 'row'>\n\n                  <div className = 'col-xl-4 col-lg-4 col-md-6 mt-4 bg-dark text-white'><p><b><u>Cases:</u></b><br></br>{this.state.cases}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-6 mt-4 bg-danger text-white'><p><b><u>Deaths:</u></b><br></br>{this.state.deaths}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-6 mt-4 bg-success text-white'><p><b><u>Recovered:</u></b><br></br>{this.state.recovered}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-6 mt-4 bg-secondary text-white'><p><b><u>Todays Cases</u></b><br></br>{this.state.todayCases}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-6 mt-4 bg-warning text-white'><p><b><u>Todays Deaths</u></b><br></br>{this.state.todayDeaths}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-6 mt-4 bg-info text-white'><p><b><u>Active</u></b><br></br>{this.state.active}</p></div>\n                  <div className = 'col-xl-4 col-lg-4 col-md-6 mt-4 bg-dark text-white'><p><b><u>Critical</u></b><br></br>{this.state.critical}</p></div>\n                 \n                  </div>\n\n                </div>\n            </div>\n\n           \n          </div>\n      </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}